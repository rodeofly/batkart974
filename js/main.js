// Generated by CoffeeScript 1.9.3
(function() {
  var CardSet, ICON_ATTENDU, ICON_THEME, citations, couleurs, niveaux, signifiants, unique_id;

  unique_id = 1;

  couleurs = {
    "Nombres et Calculs": "themeNC",
    "Organisation et gestion de données, fonctions": "themeOGD",
    "Espace et géométrie": "themeEG",
    "Grandeurs et mesures": "themeGM",
    "Algorithmique et programmation": "themeAP"
  };

  citations = {
    "Nombres et Calculs": "Chinoi la la pa bien rende a moin la monai",
    "Organisation et gestion de données, fonctions": "A koz un pak 6 y revien plu cher ?",
    "Espace et géométrie": "Dabor un pié apré un karo",
    "Grandeurs et mesures": "Meziré y kass pa le bra",
    "Algorithmique et programmation": "Y fé pa la bou avan la pli"
  };

  signifiants = {
    "Nombres et Calculs": {
      "Utiliser les nombres pour comparer, calculer et résoudre des problèmes": "D1.3 : Utiliser les nombres",
      "Utiliser le calcul littéral": "D1.3 : Utiliser le calcul littéral",
      "Comprendre et utiliser les notions de divisibilité et de nombres premiers": "D1.3 : Utiliser les nombres"
    },
    "Organisation et gestion de données, fonctions": {
      "Interpréter, représenter et traiter des données": "D3 : la formation de la personne et du citoyen",
      "Comprendre et utiliser des notions élémentaires de probabilités": "D1.3 : Utiliser le langage des probabilités",
      "Résoudre des problèmes de proportionnalité": "D2 : les méthodes et outils pour apprendre",
      "Comprendre et utiliser la notion de fonction": "D4 : les systèmes naturels et les systèmes techniques"
    },
    "Espace et géométrie": {
      "Représenter l'espace": "D5 : Situer et se situer dans le temps et l’espace",
      "Utiliser les notions de géométrie plane pour démontrer": "D1.3 : Utiliser et produire des représentations d'objets"
    },
    "Grandeurs et mesures": {
      "Calculer avec des grandeurs mesurables ; Exprimer les résultats dans les unités adaptées": "D1.3 : Exprimer une grandeur mesurée ou calculée dans une unité adaptée",
      "Comprendre l'effet de quelques transformations sur des grandeurs géométriques": "D2 : les méthodes et outils pour apprendre"
    },
    "Algorithmique et programmation": {
      "Écrire, mettre au point et exécuter un programme simple": "D1.3 : Utiliser l’algorithmique et la programmation pour créer des applications simples"
    }
  };

  niveaux = {
    "Nombres et Calculs": {
      "Utiliser les nombres pour comparer, calculer et résoudre des problèmes": {
        "Enchaînements d'opérations": {
          "Calculer avec des nombres décimaux sans parenthèses": 1,
          "Calculer avec des nombres décimaux avec parenthèses": 1
        },
        "Nombres relatifs": {
          "Comparer des nombres relatifs": 1,
          "Additionner des nombres relatifs": 1,
          "Donner l'opposé d'un nombre relatif": 1,
          "Soustraire des nombres relatifs": 1,
          "Calculer avec des nombres relatifs en respectant les priorités des opérations": 2,
          "Repérer et placer des nombres relatifs sur une demi-droite graduée adaptée": 1,
          "Multiplier des nombres relatifs": 2,
          "Diviser des nombres relatifs": 2
        },
        "Fractions": {
          "Donner diverses désignations de fractions": 1,
          "Déterminer si des fractions sont égales": 1,
          "Simplifier une fraction": 1,
          "Additionner et soustraire des fractions": 2,
          "Multiplier des fractions": 2,
          "Diviser des fractions": 2
        },
        "Racines carrées": {
          "Carrés parfaits et notion de racine carrée": 2,
          "Encadrer une racine carrée par deux nombres entiers": 2
        },
        "Puissances": {
          "Puissances d'un nombre": 2,
          "Puissances de 10": 2,
          "Multiplier par une puissance de 10": 2,
          "Opérations avec les puissances": 2,
          "Écriture scientifique": 2
        }
      },
      "Comprendre et utiliser les notions de divisibilité et de nombres premiers": {
        "Nombres entiers et divisibilité": {
          "Rendre une fraction irréductible par décomposition en facteurs de nombres premiers": 3,
          "Déterminer si un entier est divisible ou non par un autre entier": 3,
          "Utiliser les critères de divisibilité par 2, 3, 4, 5, 9 et 10": 1,
          "Division euclidienne": 1
        }
      },
      "Utiliser le calcul littéral": {
        "Calcul littéral": {
          "Simplifier une expression littérale": 1,
          "Réduire une expression littérale": 1,
          "Utiliser une expression littérale": 1,
          "Tester une égalité": 1,
          "Développer une expression avec la simple distributivité": 2,
          "Développer une expression avec la double distributivité": 3,
          "Factoriser une expression": 2
        },
        "Équations et inéquations": {
          "Modéliser un problème par une équation": 2,
          "Résoudre des problèmes du 1er degré de façon exacte ou approchée": 2,
          "Résoudre une équation": 2,
          "Résoudre une inéquation": 2
        }
      }
    },
    "Organisation et gestion de données, fonctions": {
      "Interpréter, représenter et traiter des données": {
        "Interpréter, représenter et traiter des données": {
          "Lire un outil statistique": 1,
          "Construire un outil statistique": 1,
          "Utiliser le tableur": 1,
          "Calculer des effectifs et des fréquences": 1,
          "Calculer et interpréter la moyenne": 3,
          "Calculer et interpréter unela médiane d'une série statistique": 3,
          "Calculer et interpréter l'étendue d'une série statistique": 3
        }
      },
      "Comprendre et utiliser des notions élémentaires de probabilités": {
        "Probabilités": {
          "Utiliser le vocabulaire des probabilités : expérience aléatoire, issues, évènements, univers, événement certain, impossible": 1,
          "Utiliser le vocabulaire des probabilités : événements contraires, incompatibles, équiprobabilité": 2,
          "Calculer des probabilités dans des cas simples (avec la fréquence)": 1,
          "Calculer la probabilité d'un événement (expérience aléatoire à deux épreuves)": 3,
          "Réaliser un arbre pondéré": 3
        }
      },
      "Résoudre des problèmes de proportionnalité": {
        "Proportionnalité": {
          "Utiliser et calculer l'échelle d'une carte, d'un plan…": 1,
          "Reconnaître une situation de proportionnalité ou de non proportionnalité": 1,
          "Calculer une quatrième proportionnelle (coefficient, linéarité, retour à l’unité, règle de trois)": 1
        },
        "Pourcentage": {
          "Appliquer et calculer un pourcentage": 1
        }
      },
      "Comprendre et utiliser la notion de fonction": {
        "Fonctions": {
          "Notion de fonction : différentes représentations et notations": 3,
          "Déterminer l'image ou l'antécédent d'un nombre par une fonction à partir d'un graphique ou d’un tableau": 3,
          "Fonctions linéaires": 3,
          "Fonctions affines": 3,
          "Déterminer par le calcul l'image d'un nombre par une fonction affine ou linéaire": 3,
          "Déterminer par le calcul l'antécédent d'un nombre par une fonction affine ou linéaire (équation)": 3
        }
      }
    },
    "Espace et géométrie": {
      "Représenter l'espace": {
        "Se repérer dans le plan": {
          "Se repérer sur une droite graduée": 1,
          "Se repérer dans un repère orthogonal": 1
        },
        "Géométrie dans l'espace": {
          "Utiliser, produire et mettre en relation des représentations de solides et des situations spatiales": 1,
          "Se repérer sur une sphère": 3,
          "Se repérer dans un pavé droit": 3
        }
      },
      "Utiliser les notions de géométrie plane pour démontrer": {
        "Triangles": {
          "Construire des triangles": 1,
          "Tracer la hauteur d'un triangle": 1,
          "Déterminer si un triangle est constructible ou non en utilisant l'inégalité triangulaire": 1,
          "Utiliser la règle des 180°": 1,
          "Déterminer si des triangles sont semblables": 3
        },
        "Cercles et disques": {
          "Connaître le vocabulaire du cercle et du disque": 1,
          "Tracer un cercle (ou un disque) de rayon donné": 1
        },
        "Parallélogrammes": {
          "Construire un parallélogramme et utiliser les propriétés du parallélogramme": 1,
          "Construire des parallélogrammes particuliers et utiliser les propriétés des parallélogrammes particuliers": 1
        },
        "Médiatrices": {
          "Tracer la médiatrice d'un segment avec le compas et la règle non graduée": 1,
          "Utiliser les propriétés de la médiatrice": 1
        },
        "Trigonométrie": {
          "Calculer une longueur avec cosinus, sinus ou tangente": 3,
          "Calculer un angle avec cosinus, sinus ou tangente": 3
        },
        "Théorème de Pythagore et sa réciproque": {
          "Calculer une longueur avec le théorème de Pythagore": 2,
          "Vérifier si un triangle est rectangle ou non avec la réciproque de Pythagore": 2
        },
        "Théorème de Thalès et sa réciproque": {
          "Calculer une longueur avec le théorème de Thalès": 3,
          "Vérifier si des droites sont parallèles ou non avec la réciproque de Thalès": 3
        },
        "Angles": {
          "Utiliser les angles alternes-internes pour montrer que des droites sont parallèles ou non": 1
        },
        "Transformations": {
          "Utiliser une rotation sur une figure": 3,
          "Coder une figure": 1,
          "Utiliser une homothétie sur une figure": 3,
          "Utiliser une translation sur une figure": 2,
          "Compléter et construire le symétrique d'une figure par rapport à un axe ou un point": 1,
          "Utiliser les propriétés de conservation de la symétrie": 1
        }
      }
    },
    "Grandeurs et mesures": {
      "Calculer avec des grandeurs mesurables ; Exprimer les résultats dans les unités adaptées": {
        "Périmètre": {
          "Convertir des unités de longueurs": 1,
          "Calculer le périmètre d'une figure en utilisant une formule": 1,
          "Calculer le périmètre d'une figure composée de figures simples": 1
        },
        "Aires": {
          "Convertir des unités d'aires": 1,
          "Calculer l'aire d'une figure en utilisant une formule": 1,
          "Calculer l'aire d'une figure composée de figures simples": 1
        },
        "Volumes": {
          "Convertir des unités de volume": 1,
          "Convertir des unités de contenance": 1,
          "Relier des unités de volume et de contenance": 1,
          "Calculer le volume d'un solide en utilisant une formule": 1
        },
        "Grandeurs composées": {
          "Grandeurs produits": 2,
          "Grandeurs quotients": 2
        },
        "Durées": {
          "Convertir des unités de durée": 1,
          "Calculer une durée": 1
        },
        "Échelle": {
          "Utiliser et calculer l'échelle": 1
        },
        "Angles": {
          "Mesurer et construire des angles": 1
        }
      },
      "Comprendre l'effet de quelques transformations sur des grandeurs géométriques": {
        "Agrandissement et réduction": {
          "Utiliser un déplacement, d'un agrandissement ou d'une réduction sur les longueurs, les aires, les volumes et les angles": 3
        }
      }
    },
    "Algorithmique et programmation": {
      "Écrire, mettre au point et exécuter un programme simple": {
        "Écriture d'un programme": {
          "Écrire, mettre au point (tester, corriger) et exécuter un programme en réponse à un programme donné": 1
        },
        "Programmation en parallèle": {
          "Écrire un programme dans lequel des actions sont déclenchées par des évènements extérieurs": 1,
          "Programmer des scripts se déroulant en parallèle": 1,
          "Déclenchement d'une action par un événement": 1
        },
        "Éléments algorithmiques": {
          "Notion de variable informatique": 1,
          "Utilisation de boucles": 1,
          "Utilisation d'instructions conditionnelles": 1
        }
      }
    }
  };

  ICON_THEME = {
    "Nombres et Calculs": "NC",
    "Organisation et gestion de données, fonctions": "OGD",
    "Espace et géométrie": "EG",
    "Grandeurs et mesures": "GM",
    "Algorithmique et programmation": "AP"
  };

  ICON_ATTENDU = {
    "Utiliser les nombres pour comparer, calculer et résoudre des problèmes": "D1",
    "Utiliser le calcul littéral": "D1",
    "Comprendre et utiliser les notions de divisibilité et de nombres premiers": "D1",
    "Interpréter, représenter et traiter des données": "D3",
    "Comprendre et utiliser des notions élémentaires de probabilités": "D1",
    "Résoudre des problèmes de proportionnalité": "D2",
    "Comprendre et utiliser la notion de fonction": "D4",
    "Représenter l'espace": "D5",
    "Utiliser les notions de géométrie plane pour démontrer": "D1",
    "Calculer avec des grandeurs mesurables ; Exprimer les résultats dans les unités adaptées": "D1",
    "Écrire, mettre au point et exécuter un programme simple": "D1",
    "Comprendre l'effet de quelques transformations sur des grandeurs géométriques": "D2"
  };

  CardSet = (function() {
    function CardSet(theme1, attendus1) {
      var a, attendu, attenduV, carte, html, i, id, j, n, niveau, nombre_attendus, nombre_notions, notion, notionV, notions, notionsV, numero_attendu, numero_notion, recto, ref, ref1, ref2, ref3, savoirfaire, savoirfaires, savoirfairesV, verso;
      this.theme = theme1;
      this.attendus = attendus1;
      this.set = [];
      numero_attendu = 0;
      nombre_attendus = Object.keys(this.attendus).length;
      ref = this.attendus;
      for (attendu in ref) {
        notions = ref[attendu];
        numero_attendu++;
        numero_notion = 0;
        nombre_notions = Object.keys(notions).length;
        for (notion in notions) {
          savoirfaires = notions[notion];
          id = unique_id++;
          numero_notion++;
          recto = $("<div class='face recto " + couleurs[this.theme] + "'></div>");
          recto.append("<div class='carteID'>" + id + "</div>");
          recto.append("<div id='t" + id + "' ' class='theme " + ICON_THEME[this.theme] + "'>" + this.theme + "</div>");
          recto.append("<div class='citation'>" + citations[this.theme] + "</div>");
          html = "<div id='s" + id + "'  class='attendu " + ICON_THEME[this.theme] + "'>";
          html += "<div class='signifiant " + ICON_ATTENDU[attendu] + "'>" + signifiants[this.theme][attendu] + "</div>";
          html += "<span class='intitule_attendu'>" + attendu + "</span><br>";
          for (n = i = 1, ref1 = nombre_attendus; 1 <= ref1 ? i <= ref1 : i >= ref1; n = 1 <= ref1 ? ++i : --i) {
            if (n === numero_attendu) {
              html += "<img src='./css/icones/checkbox_checked_target.png'>" + n;
            } else {
              html += "<img src='./css/icones/checkbox_unchecked_target.png'>" + n;
            }
          }
          html += "<div class='notion'>" + notion + "</div>";
          for (n = j = 1, ref2 = nombre_notions; 1 <= ref2 ? j <= ref2 : j >= ref2; n = 1 <= ref2 ? ++j : --j) {
            if (n === numero_notion) {
              html += "<img class='notion_bg' src='./css/icones/checkbox_checked.png'>" + n;
            } else {
              html += "<img class='notion_bg' src='./css/icones/checkbox_unchecked.png'>" + n;
            }
          }
          html += "</div>";
          recto.append(html);
          verso = $("<div class='face verso " + couleurs[this.theme] + "'></div>");
          html = "<div class='theme " + ICON_THEME[this.theme] + "'>";
          if (recto.find("#s" + id + " .signifiant").hasClass("D1")) {
            html += "<div class='competence representer'></div>";
            html += "<div class='competence modeliser'></div>";
            html += "<div class='competence communiquer'></div>";
          }
          if (recto.find("#s" + id + " .signifiant").hasClass("D2")) {
            html += "<div class='competence chercher'></div>";
            html += "<div class='competence modeliser'></div>";
            html += "<div class='competence raisonner'></div>";
          }
          if (recto.find("#s" + id + " .signifiant").hasClass("D3")) {
            html += "<div class='competence raisonner'></div>";
            html += "<div class='competence communiquer'></div>";
          }
          if (recto.find("#s" + id + " .signifiant").hasClass("D4")) {
            html += "<div class='competence chercher'></div>";
            html += "<div class='competence modeliser'></div>";
            html += "<div class='competence raisonner'></div>";
            html += "<div class='competence calculer'></div>";
          }
          if (recto.find("#s" + id + " .signifiant").hasClass("D5")) {
            html += "<div class='competence representer'></div>";
          }
          html += "</div>";
          verso.append(html);
          verso.append("<ul id='attendus'></ul>");
          a = 0;
          ref3 = this.attendus;
          for (attenduV in ref3) {
            notionsV = ref3[attenduV];
            a++;
            if (a === numero_attendu) {
              verso.find("#attendus").append("<li class='attendu'><div class='target'></div>" + attenduV + "\n  <ol id='notions'></ol>\n</li>");
              n = 0;
              for (notionV in notionsV) {
                savoirfairesV = notionsV[notionV];
                n++;
                if (n === numero_notion) {
                  verso.find("#notions").append("<li class='notion'>" + notionV + "\n  <ul id='savoirfaires'></ul>\n</li>");
                  for (savoirfaire in savoirfairesV) {
                    niveau = savoirfairesV[savoirfaire];
                    verso.find("#savoirfaires").append("<li>" + savoirfaire + ": <img class='star' src='img/" + niveau + "star.png'></li>");
                  }
                } else {
                  verso.find("#notions").append("<li class='notion'>" + notionV + "</li>");
                }
              }
            } else {
              verso.find("#attendus").append("<li class='attendu'><div class='target'></div>" + attenduV + "</li>");
            }
          }
          carte = $("<div></div>");
          carte.append("<div id='" + "' class='carte'></div>");
          carte.find(".carte").append(recto).append(verso);
          this.set.push(carte.html());
        }
      }
    }

    return CardSet;

  })();

  $(function() {
    var attendus, i, len, ref, s, set, theme;
    alert("go");
    for (theme in niveaux) {
      attendus = niveaux[theme];
      set = new CardSet(theme, attendus);
      ref = set.set;
      for (i = 0, len = ref.length; i < len; i++) {
        s = ref[i];
        $(".deck").append(s);
      }
    }
    $(".verso").hide();
    $(".carte").on("click", function() {
      $(this).find(".recto").toggle();
      return $(this).find(".verso").toggle();
    });
    $(".deck").sortable();
    return $("#toggle").on("click", function() {
      $(".recto").toggle();
      return $(".verso").toggle();
    });
  });

}).call(this);
